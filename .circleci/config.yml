version: 2.1
orbs:
  aws-cli: circleci/aws-cli@1.3.0
  jq: circleci/jq@1.9.1
  utils: coda/utils@2.3.0
  base-tools:
    commands:
      install:
        steps:
          - run:
              name: Install basic tools
              command: sudo apt-get update && sudo apt-get install -y pipenv
          - run:
              # Image libraries required by the social cards plugin for MkDocs Material.
              name: Install image libraries
              command: sudo apt-get install libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev


executors:
  default_build_environment:
    docker:
      - image: cimg/node:14.17
        auth:
          username: codainternaltools
          password: $DOCKERHUB_PASSWORD

commands:
  bootstrap_pipenv:
    steps:
      - restore_cache:
          name: Restore Cache - pipenv
          keys:
            - pipenv-{{ checksum "Pipfile.lock" }}
      - run:
          name: Bootstrap pipenv
          command: make _bootstrap-python
      - save_cache:
          name: Save Cache - pipenv
          key: pipenv-{{ checksum "Pipfile.lock" }}
          paths:
            - /root/project/.venv # python
  bootstrap_node:
    steps:
      - restore_cache:
          name: Restore Cache - yarn
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-
      - run:
          name: 'Install deps (node)'
          command: make _bootstrap-node
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
  bootstrap_aws_cli:
    steps:
      - utils/boostrap-aws-context-creds
      - aws-cli/install

jobs:
  build:
    executor: default_build_environment
    working_directory: ~/repo

    steps:
      - checkout
      - base-tools/install
      - bootstrap_node
      - bootstrap_pipenv
      - run:
          name: 'Lint'
          command: make lint
      - run:
          name: 'Test'
          command: make test
      - run:
          name: 'Ensure clean dist diff'
          command: make validate-no-changes

  build-docs-head:
    executor: default_build_environment
    working_directory: ~/repo

    steps:
      - checkout
      - base-tools/install
      - bootstrap_node
      - bootstrap_pipenv
      - run:
          name: 'Typedoc'
          command: DOC_DISABLE_SOURCES=false DOC_GIT_REVISION="$(git rev-parse HEAD)" make docs
      - run:
          name: "MkDocs"
          command: MK_DOCS_SITE_URL="https://head.coda.io/packs/build/latest/" make build-mkdocs
      - persist_to_workspace:
          root: ~/repo
          paths:
            - site

  build-docs-staging:
    executor: default_build_environment
    working_directory: ~/repo

    steps:
      - checkout
      - base-tools/install
      - bootstrap_node
      - bootstrap_pipenv
      - run:
          name: 'Typedoc'
          command: DOC_DISABLE_SOURCES=false DOC_GIT_REVISION="$(git rev-parse HEAD)" make docs
      - run:
          name: "MkDocs"
          command: MK_DOCS_SITE_URL="https://staging.coda.io/packs/build/latest/" make build-mkdocs
      - persist_to_workspace:
          root: ~/repo
          paths:
            - site

  build-docs-prod:
    executor: default_build_environment
    working_directory: ~/repo

    steps:
      - checkout
      - base-tools/install
      - bootstrap_node
      - bootstrap_pipenv
      - run:
          name: 'Typedoc'
          command: DOC_DISABLE_SOURCES=false DOC_GIT_REVISION="$(git rev-parse HEAD)" make docs
      - run:
          name: "MkDocs"
          command: MK_DOCS_SITE_URL="https://coda.io/packs/build/latest/" make build-mkdocs
      - persist_to_workspace:
          root: ~/repo
          paths:
            - site

  push-head-docs:
    executor: default_build_environment
    working_directory: ~/repo

    steps:
      - checkout
      - bootstrap_node
      - bootstrap_aws_cli
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy Head
          command: 'make publish-docs-head FLAGS=--forceUpload'
      # TODO: add a probe step here to validate?

  push-staging-docs:
    executor: default_build_environment
    working_directory: ~/repo

    steps:
      - checkout
      - bootstrap_node
      - bootstrap_aws_cli
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy Staging
          command: 'make publish-docs-staging FLAGS=--forceUpload'
      # TODO: add a probe step here to validate?

  push-prod-docs:
    executor: default_build_environment
    working_directory: ~/repo

    steps:
      - checkout
      - bootstrap_node
      - bootstrap_aws_cli
      - attach_workspace:
          at: ~/repo
      - run:
          name: Deploy Prod
          command: 'make publish-docs-prod FLAGS=--forceUpload'
      # TODO: add a probe step here to validate?

workflows:
  version: 2

  commit-validation:
    jobs:
      - build:
          context:
            - dockerhub
          filters:
            branches:
              ignore:
                - main

  commit-validation-and-deploy-docs:
    jobs:
      - build:
          context:
            - dockerhub
          filters:
            branches:
              only:
                - main
      - utils/cancel-older-awaiting-approvals:
          context:
            - circleci
          circle_token: ${CIRCLECI_TOKEN}
          requires:
            - build
      - wait-for-docs-approval:
          type: approval
          requires:
            - utils/cancel-older-awaiting-approvals
      - build-docs-head:
          context:
            - dockerhub
          requires:
            - wait-for-docs-approval
      - push-head-docs:
          context:
            - aws-head
            - dockerhub
          requires:
            - build-docs-head
      - build-docs-staging:
          context:
            - dockerhub
          requires:
            - push-head-docs
      - push-staging-docs:
          context:
            - aws-staging
            - dockerhub
          requires:
            - push-head-docs
            - build-docs-staging
      - build-docs-prod:
          context:
            - dockerhub
          requires:
            - push-staging-docs
      - utils/slack-notify-waiting-for-approval:
          context:
            - slack
          slack_bot_token: ${PUSH_REMINDER_BOT_TOKEN}
          requires:
            - push-staging-docs
      - wait-for-approval:
          type: approval
          requires:
            - push-staging-docs
      - push-prod-docs:
          context:
            - aws-prod
            - dockerhub
          requires:
            - wait-for-approval
            - build-docs-prod
      # TODO: add publish NPM package with approval?
